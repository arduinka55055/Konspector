
@page "/counter"
@using Konspector.Misc
<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<input type="number" @bind="currentCount" />
<!--huge editable text area-->
<textarea class="form-control" rows="10" @bind="quote"></textarea>
<button class="btn btn-primary" @onclick="lol">Click me</button>
<button class="btn btn-primary" @onclick="cts.Cancel">Cancel</button>

<div class="HTMLContent">@test</div>

@code {
    private string quote = "Hello, world!";
    private MarkupString test = new MarkupString("<p>Test</p>");
    CancellationTokenSource cts = new CancellationTokenSource();
    private int currentCount = 0;

    private async void IncrementCount() {
        currentCount++;
        var result = await OpenFile.PickDefault();
        Console.WriteLine(result);
        using var stream = await result.OpenReadAsync();
        var buffer = new byte[stream.Length];
        await stream.ReadAsync(buffer.AsMemory(0, buffer.Length));
        var content = System.Text.Encoding.UTF8.GetString(buffer);
        Console.WriteLine($"File content: {content}");
        //set DOM to html content
        test = (MarkupString)content;
        StateHasChanged();


    }
    private async void lol()
    {
        Interfaces.ITextGenerator generator = new Services.OllamaGenerator();
        string q = await generator.GenerateText(quote, cts.Token);
        quote = q;
        //indicate that the operation is complete
        cts.Dispose();
        cts = new CancellationTokenSource();
        //update the UI
        StateHasChanged();
    }
}
